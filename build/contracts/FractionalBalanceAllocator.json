{
  "contractName": "FractionalBalanceAllocator",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "frozen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "isRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "addRole",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addRoleAccessor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeRoleAccessor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rolesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roles",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fraction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "OWNER_ROLE",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "_role",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isRoleAccessor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fraction",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Frozen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fraction",
          "type": "uint256"
        }
      ],
      "name": "FractionSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "RoleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_role",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "RoleAccessorAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_role",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "RoleAccessorRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "freeze",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fraction",
          "type": "uint256"
        }
      ],
      "name": "setFraction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "allocate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.11+commit.c082d0b4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"isRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fraction\",\"type\":\"uint256\"}],\"name\":\"setFraction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"addRole\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addRoleAccessor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeRoleAccessor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"freeze\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"allocate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rolesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roles\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"OWNER_ROLE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isRoleAccessor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fraction\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Frozen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fraction\",\"type\":\"uint256\"}],\"name\":\"FractionSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"RoleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"RoleAccessorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"RoleAccessorRemoved\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"Jens Ivar J\\u00f8rdre <jensivar@hubii.com>\",\"methods\":{\"addRole(string)\":{\"params\":{\"_role\":\"The concerned role\"}},\"addRoleAccessor(string,address)\":{\"params\":{\"_address\":\"The concerned address\",\"_role\":\"The concerned role\"}},\"freeze()\":{\"details\":\"This operation can not be undone\"},\"isRole(string)\":{\"params\":{\"_role\":\"The concerned role\"},\"return\":\"true if role has been set, else false\"},\"isRoleAccessor(string,address)\":{\"params\":{\"_address\":\"The concerned address\",\"_role\":\"The concerned role\"},\"return\":\"true if address is the one of a registered accessor of role, else false\"},\"removeRoleAccessor(string,address)\":{\"params\":{\"_address\":\"The concerned address\",\"_role\":\"The concerned role\"}},\"rolesCount()\":{\"return\":\"the count of roles\"},\"setFraction(uint256)\":{\"params\":{\"_fraction\":\"The fraction to be set\"}}},\"title\":\"FractionalBalanceAllocator\"},\"userdoc\":{\"methods\":{\"addRole(string)\":{\"notice\":\"Add role\"},\"addRoleAccessor(string,address)\":{\"notice\":\"Register an address as accessor of a role\"},\"allocate()\":{\"notice\":\"Return the defined allocation from the allocator\"},\"freeze()\":{\"notice\":\"Freeze updates this allocator\"},\"isRole(string)\":{\"notice\":\"Gauge whether a role is set\"},\"isRoleAccessor(string,address)\":{\"notice\":\"Gauge whether an address is an accessor of a role\"},\"removeRoleAccessor(string,address)\":{\"notice\":\"Deregister an address as accessor of a role\"},\"rolesCount()\":{\"notice\":\"Get the count of roles\"},\"setFraction(uint256)\":{\"notice\":\"Set the fraction\"}},\"notice\":\"A bounty allocator allocating by fraction of the bounty fund's token balance\"}},\"settings\":{\"compilationTarget\":{\"/opt/buildagent/work/9988d0feca52d9d9/contracts/FractionalBalanceAllocator.sol\":\"FractionalBalanceAllocator\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/opt/buildagent/work/9988d0feca52d9d9/contracts/Allocator.sol\":{\"keccak256\":\"0x284ac2245b2ac24cf2a5e75aa6b08dbd5a43119048514680d218c6122f0fdb40\",\"urls\":[\"bzz-raw://b1a511aba1c8ffc0374270bfaac005801cd3752f883bd0ffc26058316c0a8c44\",\"dweb:/ipfs/QmWNCjgiBD4MYMrsatPtfJVXu6HT9gt7bWZMPhsJUrWGHi\"]},\"/opt/buildagent/work/9988d0feca52d9d9/contracts/BountyFund.sol\":{\"keccak256\":\"0x54e9b795b779d39a9a2c923dae8e2eca632b26bc5cda3b72e5345466f6bdf10a\",\"urls\":[\"bzz-raw://55a426886019f5c0fd5a47474ad698ca27140fe77d4a02a0a61793fe267129d1\",\"dweb:/ipfs/QmWoMTEPeKCkYkEdKUaQRakKHZvMW39ayMAuxPLLjr8haR\"]},\"/opt/buildagent/work/9988d0feca52d9d9/contracts/ConstantsLib.sol\":{\"keccak256\":\"0xc5dd0ff7152da24cdb793b8e9fe020b2bc27c3eeb5790b241491f80ad53d1acf\",\"urls\":[\"bzz-raw://84d1448f609eec6b8c1702896cd1dd531845d702e882957f077ea556feb1b0a5\",\"dweb:/ipfs/QmPgmZ3ifkYzTNGnsZXYZrB9svdjKNT66cMRM1NvDj1BdL\"]},\"/opt/buildagent/work/9988d0feca52d9d9/contracts/FractionalBalanceAllocator.sol\":{\"keccak256\":\"0xc9c208932bbafb2bb236c1f81edfb92eb4a56f633c8bb33e88df33faa0695f6e\",\"urls\":[\"bzz-raw://2bf1c671c73327b8b6cdbe164391b4b49cd0a4e1dc5b0fc475132123695339d3\",\"dweb:/ipfs/QmbGFR2pXAZ2eFKZWiAxZrK8p7qjsnMWAWWcaukh7NZuUd\"]},\"/opt/buildagent/work/9988d0feca52d9d9/contracts/RBACed.sol\":{\"keccak256\":\"0xff8d14a14a9bcd9b3befa1d8fc2c7abb48e9b8b5c59cbe43e3f260f222b2ee9c\",\"urls\":[\"bzz-raw://325f59ac1a54597e8bb535e7bb95340dd992e05f91e9e6a99e60b368d272aea2\",\"dweb:/ipfs/Qmdz6u7Gtr8RgkyuZqE8MwxK2tkdZY3EgqE1STwnu8uiWk\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzz-raw://d62d769b2219d5de39013093412623e624fa887f871826ea3bae6052ee893610\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzz-raw://4f5b57664069671648fb81f55b0082faecdf1b2f159eec6b1fa6cef9b7d73bc5\",\"dweb:/ipfs/QmcyytaLs7zFdb4Uu7C5PmQRhQdB3wA3fUdkV6mkYfdDFH\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001dce38038062001dce833981810160405260208110156200003757600080fd5b81019080805190602001909291905050506200008e6040518060400160405280600581526020017f4f574e4552000000000000000000000000000000000000000000000000000000815250620001be60201b60201c565b620000d56040518060400160405280600581526020017f4f574e4552000000000000000000000000000000000000000000000000000000815250336200025d60201b60201c565b73__ConstantsLib__________________________62a123336040518163ffffffff1660e01b815260040160206040518083038186803b1580156200011957600080fd5b505af41580156200012e573d6000803e3d6000fd5b505050506040513d60208110156200014557600080fd5b8101908080519060200190929190505050811115620001b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d81526020018062001d6f603d913960400191505060405180910390fd5b80600381905550506200058d565b60016000620001d3836200029d60201b60201c565b815260200190815260200160002054600014156200025a5760008190806001815401808255809150509060018203906000526020600020016000909192909190915090805190602001906200022a929190620004de565b50506000805490506001600062000247846200029d60201b60201c565b8152602001908152602001600020819055505b50565b62000299816002600062000277866200029d60201b60201c565b81526020019081526020016000206200031a60201b6200152d1790919060201c565b5050565b6000816040516020018082805190602001908083835b60208310620002d85780518252602082019150602081019050602083039250620002b3565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050919050565b6200032c8282620003fe60201b60201c565b15620003a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000487576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018062001dac6022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200052157805160ff191683800117855562000552565b8280016001018555821562000552579182015b828111156200055157825182559160200191906001019062000534565b5b50905062000561919062000565565b5090565b6200058a91905b80821115620005865760008160009055506001016200056c565b5090565b90565b6117d2806200059d6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806362a5af3b1161008c578063bfda4a4911610066578063bfda4a49146104ae578063d8894bb514610555578063e58378bb14610573578063fb535fd6146105f6576100cf565b806362a5af3b14610468578063abaa991614610472578063b8517dd814610490576100cf565b8063054f7d9c146100d45780630f6c37de146100f6578063182815b0146101c95780633e96e868146101f75780634da195be146102b25780635b0f833a1461038d575b600080fd5b6100dc6106e9565b604051808215151515815260200191505060405180910390f35b6101af6004803603602081101561010c57600080fd5b810190808035906020019064010000000081111561012957600080fd5b82018360208201111561013b57600080fd5b8035906020019184600183028401116401000000008311171561015d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506106fc565b604051808215151515815260200191505060405180910390f35b6101f5600480360360208110156101df57600080fd5b8101908080359060200190929190505050610725565b005b6102b06004803603602081101561020d57600080fd5b810190808035906020019064010000000081111561022a57600080fd5b82018360208201111561023c57600080fd5b8035906020019184600183028401116401000000008311171561025e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061093a565b005b61038b600480360360408110156102c857600080fd5b81019080803590602001906401000000008111156102e557600080fd5b8201836020820111156102f757600080fd5b8035906020019184600183028401116401000000008311171561031957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a78565b005b610466600480360360408110156103a357600080fd5b81019080803590602001906401000000008111156103c057600080fd5b8201836020820111156103d257600080fd5b803590602001918460018302840111640100000000831117156103f457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bcf565b005b610470610d49565b005b61047a610e28565b6040518082815260200191505060405180910390f35b61049861100a565b6040518082815260200191505060405180910390f35b6104da600480360360208110156104c457600080fd5b8101908080359060200190929190505050611016565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561051a5780820151818401526020810190506104ff565b50505050905090810190601f1680156105475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61055d6110cf565b6040518082815260200191505060405180910390f35b61057b6110d5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105bb5780820151818401526020810190506105a0565b50505050905090810190601f1680156105e85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106cf6004803603604081101561060c57600080fd5b810190808035906020019064010000000081111561062957600080fd5b82018360208201111561063b57600080fd5b8035906020019184600183028401116401000000008311171561065d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061110e565b604051808215151515815260200191505060405180910390f35b600460009054906101000a900460ff1681565b60006001600061070b84611145565b815260200190815260200160002054600014159050919050565b6040518060400160405280600581526020017f4f574e4552000000000000000000000000000000000000000000000000000000815250610765813361110e565b6107ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806116ae602a913960400191505060405180910390fd5b600460009054906101000a900460ff1615610820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117796025913960400191505060405180910390fd5b73__ConstantsLib__________________________62a123336040518163ffffffff1660e01b815260040160206040518083038186803b15801561086357600080fd5b505af4158015610877573d6000803e3d6000fd5b505050506040513d602081101561088d57600080fd5b81019080805190602001909291905050508211156108f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d81526020018061171a603d913960400191505060405180910390fd5b816003819055507f0715b7bb13cefca157769ecb01f046d01a1b69f814eb415ba0415e67fd119f026003546040518082815260200191505060405180910390a15050565b6040518060400160405280600581526020017f4f574e455200000000000000000000000000000000000000000000000000000081525061097a813361110e565b6109cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806116ae602a913960400191505060405180910390fd5b6109d8826111c0565b7f22f30a094e2ed10e9a92ebac7a70b8e2ae3288d9b594db22587861bc8fef4eef826040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a3a578082015181840152602081019050610a1f565b50505050905090810190601f168015610a675780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b6040518060400160405280600581526020017f4f574e4552000000000000000000000000000000000000000000000000000000815250610ab8813361110e565b610b0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806116ae602a913960400191505060405180910390fd5b610b17838361124c565b8173ffffffffffffffffffffffffffffffffffffffff167fafe42c64e42361a5193c84f3f11b6803e41dd901d473ee6faa72f43f8ab1f468846040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b90578082015181840152602081019050610b75565b50505050905090810190601f168015610bbd5780820380516001836020036101000a031916815260200191505b509250505060405180910390a2505050565b6040518060400160405280600581526020017f4f574e4552000000000000000000000000000000000000000000000000000000815250610c0f813361110e565b610c64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806116ae602a913960400191505060405180910390fd5b610c918260026000610c7587611145565b815260200190815260200160002061127d90919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f3e3ea7a1060be276a52e916803e2f89e3478e263893fc3c0b4d5793dd6d5f032846040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d0a578082015181840152602081019050610cef565b50505050905090810190601f168015610d375780820380516001836020036101000a031916815260200191505b509250505060405180910390a2505050565b6040518060400160405280600581526020017f4f574e4552000000000000000000000000000000000000000000000000000000815250610d89813361110e565b610dde576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806116ae602a913960400191505060405180910390fd5b6001600460006101000a81548160ff0219169083151502179055507fa8cab3d1893ed53071b052fafa843143492f25d1d6b0170d460789f7ab1954be60405160405180910390a150565b600061100573__ConstantsLib__________________________62a123336040518163ffffffff1660e01b815260040160206040518083038186803b158015610e7057600080fd5b505af4158015610e84573d6000803e3d6000fd5b505050506040513d6020811015610e9a57600080fd5b8101908080519060200190929190505050610ff76003543373ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ef757600080fd5b505afa158015610f0b573d6000803e3d6000fd5b505050506040513d6020811015610f2157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610fae57600080fd5b505afa158015610fc2573d6000803e3d6000fd5b505050506040513d6020811015610fd857600080fd5b810190808051906020019092919050505061133a90919063ffffffff16565b6113c090919063ffffffff16565b905090565b60008080549050905090565b6000818154811061102357fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110c75780601f1061109c576101008083540402835291602001916110c7565b820191906000526020600020905b8154815290600101906020018083116110aa57829003601f168201915b505050505081565b60035481565b6040518060400160405280600581526020017f4f574e455200000000000000000000000000000000000000000000000000000081525081565b600061113d826002600061112187611145565b815260200190815260200160002061144f90919063ffffffff16565b905092915050565b6000816040516020018082805190602001908083835b6020831061117e578051825260208201915060208101905060208303925061115b565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050919050565b600160006111cd83611145565b81526020019081526020016000205460001415611249576000819080600181540180825580915050906001820390600052602060002001600090919290919091509080519060200190611221929190611608565b50506000805490506001600061123684611145565b8152602001908152602001600020819055505b50565b611279816002600061125d86611145565b815260200190815260200160002061152d90919063ffffffff16565b5050565b611287828261144f565b6112dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806116d86021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008083141561134d57600090506113ba565b600082840290508284828161135e57fe5b04146113b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806116f96021913960400191505060405180910390fd5b809150505b92915050565b6000808211611437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b600082848161144257fe5b0490508091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806117576022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611537828261144f565b156115aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061164957805160ff1916838001178555611677565b82800160010185558215611677579182015b8281111561167657825182559160200191906001019061165b565b5b5090506116849190611688565b5090565b6116aa91905b808211156116a657600081600090555060010161168e565b5090565b9056fe5242414365643a2073656e646572206973206e6f74206163636573736f72206f662074686520726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774672616374696f6e616c42616c616e6365416c6c6f6361746f723a206672616374696f6e2069732067726561746572207468616e20656e746972657479526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734672616374696f6e616c42616c616e6365416c6c6f6361746f723a2069732066726f7a656ea265627a7a723158201dd8870381607186fd8bcd6f47de2bda15c5b35974febe4da950e189590853b164736f6c634300050b00324672616374696f6e616c42616c616e6365416c6c6f6361746f723a206672616374696f6e2069732067726561746572207468616e20656e746972657479526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806362a5af3b1161008c578063bfda4a4911610066578063bfda4a49146104ae578063d8894bb514610555578063e58378bb14610573578063fb535fd6146105f6576100cf565b806362a5af3b14610468578063abaa991614610472578063b8517dd814610490576100cf565b8063054f7d9c146100d45780630f6c37de146100f6578063182815b0146101c95780633e96e868146101f75780634da195be146102b25780635b0f833a1461038d575b600080fd5b6100dc6106e9565b604051808215151515815260200191505060405180910390f35b6101af6004803603602081101561010c57600080fd5b810190808035906020019064010000000081111561012957600080fd5b82018360208201111561013b57600080fd5b8035906020019184600183028401116401000000008311171561015d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506106fc565b604051808215151515815260200191505060405180910390f35b6101f5600480360360208110156101df57600080fd5b8101908080359060200190929190505050610725565b005b6102b06004803603602081101561020d57600080fd5b810190808035906020019064010000000081111561022a57600080fd5b82018360208201111561023c57600080fd5b8035906020019184600183028401116401000000008311171561025e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061093a565b005b61038b600480360360408110156102c857600080fd5b81019080803590602001906401000000008111156102e557600080fd5b8201836020820111156102f757600080fd5b8035906020019184600183028401116401000000008311171561031957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a78565b005b610466600480360360408110156103a357600080fd5b81019080803590602001906401000000008111156103c057600080fd5b8201836020820111156103d257600080fd5b803590602001918460018302840111640100000000831117156103f457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610bcf565b005b610470610d49565b005b61047a610e28565b6040518082815260200191505060405180910390f35b61049861100a565b6040518082815260200191505060405180910390f35b6104da600480360360208110156104c457600080fd5b8101908080359060200190929190505050611016565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561051a5780820151818401526020810190506104ff565b50505050905090810190601f1680156105475780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61055d6110cf565b6040518082815260200191505060405180910390f35b61057b6110d5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105bb5780820151818401526020810190506105a0565b50505050905090810190601f1680156105e85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6106cf6004803603604081101561060c57600080fd5b810190808035906020019064010000000081111561062957600080fd5b82018360208201111561063b57600080fd5b8035906020019184600183028401116401000000008311171561065d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061110e565b604051808215151515815260200191505060405180910390f35b600460009054906101000a900460ff1681565b60006001600061070b84611145565b815260200190815260200160002054600014159050919050565b6040518060400160405280600581526020017f4f574e4552000000000000000000000000000000000000000000000000000000815250610765813361110e565b6107ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806116ae602a913960400191505060405180910390fd5b600460009054906101000a900460ff1615610820576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806117796025913960400191505060405180910390fd5b73__ConstantsLib__________________________62a123336040518163ffffffff1660e01b815260040160206040518083038186803b15801561086357600080fd5b505af4158015610877573d6000803e3d6000fd5b505050506040513d602081101561088d57600080fd5b81019080805190602001909291905050508211156108f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d81526020018061171a603d913960400191505060405180910390fd5b816003819055507f0715b7bb13cefca157769ecb01f046d01a1b69f814eb415ba0415e67fd119f026003546040518082815260200191505060405180910390a15050565b6040518060400160405280600581526020017f4f574e455200000000000000000000000000000000000000000000000000000081525061097a813361110e565b6109cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806116ae602a913960400191505060405180910390fd5b6109d8826111c0565b7f22f30a094e2ed10e9a92ebac7a70b8e2ae3288d9b594db22587861bc8fef4eef826040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a3a578082015181840152602081019050610a1f565b50505050905090810190601f168015610a675780820380516001836020036101000a031916815260200191505b509250505060405180910390a15050565b6040518060400160405280600581526020017f4f574e4552000000000000000000000000000000000000000000000000000000815250610ab8813361110e565b610b0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806116ae602a913960400191505060405180910390fd5b610b17838361124c565b8173ffffffffffffffffffffffffffffffffffffffff167fafe42c64e42361a5193c84f3f11b6803e41dd901d473ee6faa72f43f8ab1f468846040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b90578082015181840152602081019050610b75565b50505050905090810190601f168015610bbd5780820380516001836020036101000a031916815260200191505b509250505060405180910390a2505050565b6040518060400160405280600581526020017f4f574e4552000000000000000000000000000000000000000000000000000000815250610c0f813361110e565b610c64576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806116ae602a913960400191505060405180910390fd5b610c918260026000610c7587611145565b815260200190815260200160002061127d90919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff167f3e3ea7a1060be276a52e916803e2f89e3478e263893fc3c0b4d5793dd6d5f032846040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d0a578082015181840152602081019050610cef565b50505050905090810190601f168015610d375780820380516001836020036101000a031916815260200191505b509250505060405180910390a2505050565b6040518060400160405280600581526020017f4f574e4552000000000000000000000000000000000000000000000000000000815250610d89813361110e565b610dde576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806116ae602a913960400191505060405180910390fd5b6001600460006101000a81548160ff0219169083151502179055507fa8cab3d1893ed53071b052fafa843143492f25d1d6b0170d460789f7ab1954be60405160405180910390a150565b600061100573__ConstantsLib__________________________62a123336040518163ffffffff1660e01b815260040160206040518083038186803b158015610e7057600080fd5b505af4158015610e84573d6000803e3d6000fd5b505050506040513d6020811015610e9a57600080fd5b8101908080519060200190929190505050610ff76003543373ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ef757600080fd5b505afa158015610f0b573d6000803e3d6000fd5b505050506040513d6020811015610f2157600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610fae57600080fd5b505afa158015610fc2573d6000803e3d6000fd5b505050506040513d6020811015610fd857600080fd5b810190808051906020019092919050505061133a90919063ffffffff16565b6113c090919063ffffffff16565b905090565b60008080549050905090565b6000818154811061102357fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110c75780601f1061109c576101008083540402835291602001916110c7565b820191906000526020600020905b8154815290600101906020018083116110aa57829003601f168201915b505050505081565b60035481565b6040518060400160405280600581526020017f4f574e455200000000000000000000000000000000000000000000000000000081525081565b600061113d826002600061112187611145565b815260200190815260200160002061144f90919063ffffffff16565b905092915050565b6000816040516020018082805190602001908083835b6020831061117e578051825260208201915060208101905060208303925061115b565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050919050565b600160006111cd83611145565b81526020019081526020016000205460001415611249576000819080600181540180825580915050906001820390600052602060002001600090919290919091509080519060200190611221929190611608565b50506000805490506001600061123684611145565b8152602001908152602001600020819055505b50565b611279816002600061125d86611145565b815260200190815260200160002061152d90919063ffffffff16565b5050565b611287828261144f565b6112dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806116d86021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008083141561134d57600090506113ba565b600082840290508284828161135e57fe5b04146113b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806116f96021913960400191505060405180910390fd5b809150505b92915050565b6000808211611437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b600082848161144257fe5b0490508091505092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806117576022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611537828261144f565b156115aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061164957805160ff1916838001178555611677565b82800160010185558215611677579182015b8281111561167657825182559160200191906001019061165b565b5b5090506116849190611688565b5090565b6116aa91905b808211156116a657600081600090555060010161168e565b5090565b9056fe5242414365643a2073656e646572206973206e6f74206163636573736f72206f662074686520726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774672616374696f6e616c42616c616e6365416c6c6f6361746f723a206672616374696f6e2069732067726561746572207468616e20656e746972657479526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734672616374696f6e616c42616c616e6365416c6c6f6361746f723a2069732066726f7a656ea265627a7a723158201dd8870381607186fd8bcd6f47de2bda15c5b35974febe4da950e189590853b164736f6c634300050b0032",
  "sourceMap": "597:1712:6:-;;;810:307;8:9:-1;5:2;;;30:1;27;20:12;5:2;810:307:6;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;810:307:6;;;;;;;;;;;;;;;;890:20:11;899:10;;;;;;;;;;;;;;;;;890:8;;;:20;;:::i;:::-;950:40;967:10;;;;;;;;;;;;;;;;;979;950:16;;;:40;;:::i;:::-;946:12:6;:22;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;946:24:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;946:24:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;946:24:6;;;;;;;;;;;;;;;;933:9;:37;;925:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1101:9;1090:8;:20;;;;810:307;597:1712;;3171:220:11;3246:15;:33;3262:16;3272:5;3262:9;;;:16;;:::i;:::-;3246:33;;;;;;;;;;;;3241:1;:38;3237:148;;;3295:5;3306;3295:17;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3295:17:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3362:5;:12;;;;3326:15;:33;3342:16;3352:5;3342:9;;;:16;;:::i;:::-;3326:33;;;;;;;;;;;:48;;;;3237:148;3171:220;:::o;3397:141::-;3489:42;3522:8;3489:10;:28;3500:16;3510:5;3500:9;;;:16;;:::i;:::-;3489:28;;;;;;;;;;;:32;;;;;;:42;;;;:::i;:::-;3397:141;;:::o;3544:146::-;3619:7;3676:5;3659:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3659:23:11;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3659:23:11;;;3649:34;;;;;;3642:41;;3544:146;;;:::o;260:175:16:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;597:1712:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "597:1712:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;597:1712:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;785:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1494:142:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1494:142:11;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1494:142:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1494:142:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1494:142:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1494:142:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1591:423:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1591:423:6;;;;;;;;;;;;;;;;;:::i;:::-;;1707:192:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1707:192:11;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1707:192:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1707:192:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1707:192:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1707:192:11;;;;;;;;;;;;;;;:::i;:::-;;2467:263;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2467:263:11;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2467:263:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2467:263:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2467:263:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2467:263:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2882:283;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2882:283:11;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2882:283:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2882:283:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2882:283:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2882:283:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1331:173:6;;;:::i;:::-;;2085:222;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1246:104:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;626:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;626:21:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;626:21:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;756:23:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;576:43:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;576:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2145:172;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2145:172:11;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2145:172:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2145:172:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2145:172:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2145:172:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;785:18:6;;;;;;;;;;;;;:::o;1494:142:11:-;1564:4;1596:15;:33;1612:16;1622:5;1612:9;:16::i;:::-;1596:33;;;;;;;;;;;;1591:1;:38;;1584:45;;1494:142;;;:::o;1591:423:6:-;1663:10;;;;;;;;;;;;;;;;;1068:33:11;1083:5;1090:10;1068:14;:33::i;:::-;1060:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1167:6:6;;;;;;;;;;;1166:7;1158:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1787:12;:22;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1787:24:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1787:24:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1787:24:6;;;;;;;;;;;;;;;;1774:9;:37;;1766:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1939:9;1928:8;:20;;;;1986:21;1998:8;;1986:21;;;;;;;;;;;;;;;;;;1591:423;;:::o;1707:192:11:-;1777:10;;;;;;;;;;;;;;;;;1068:33;1083:5;1090:10;1068:14;:33::i;:::-;1060:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:15;1832:5;1823:8;:15::i;:::-;1876:16;1886:5;1876:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1876:16:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1707:192;;:::o;2467:263::-;2563:10;;;;;;;;;;;;;;;;;1068:33;1083:5;1090:10;1068:14;:33::i;:::-;1060:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2618:33;2635:5;2642:8;2618:16;:33::i;:::-;2714:8;2689:34;;;2707:5;2689:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2689:34:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2467:263;;;:::o;2882:283::-;2981:10;;;;;;;;;;;;;;;;;1068:33;1083:5;1090:10;1068:14;:33::i;:::-;1060:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3039:45;3075:8;3039:10;:28;3050:16;3060:5;3050:9;:16::i;:::-;3039:28;;;;;;;;;;;:35;;:45;;;;:::i;:::-;3149:8;3122:36;;;3142:5;3122:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3122:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2882:283;;;:::o;1331:173:6:-;1381:10;;;;;;;;;;;;;;;;;1068:33:11;1083:5;1090:10;1068:14;:33::i;:::-;1060:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1447:4:6;1438:6;;:13;;;;;;;;;;;;;;;;;;1489:8;;;;;;;;;;1331:173;:::o;2085:222::-;2138:7;2168:132;2275:12;:22;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2275:24:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2275:24:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2275:24:6;;;;;;;;;;;;;;;;2168:93;2252:8;;2179:10;2168:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2168:30:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2168:30:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2168:30:6;;;;;;;;;;;;;;;;:49;;;2226:10;2168:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2168:70:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2168:70:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2168:70:6;;;;;;;;;;;;;;;;:83;;:93;;;;:::i;:::-;:106;;:132;;;;:::i;:::-;2161:139;;2085:222;:::o;1246:104:11:-;1301:7;1331:5;:12;;;;1324:19;;1246:104;:::o;626:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;756:23:6:-;;;;:::o;576:43:11:-;;;;;;;;;;;;;;;;;;;:::o;2145:172::-;2241:4;2268:42;2301:8;2268:10;:28;2279:16;2289:5;2279:9;:16::i;:::-;2268:28;;;;;;;;;;;:32;;:42;;;;:::i;:::-;2261:49;;2145:172;;;;:::o;3544:146::-;3619:7;3676:5;3659:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3659:23:11;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3659:23:11;;;3649:34;;;;;;3642:41;;3544:146;;;:::o;3171:220::-;3246:15;:33;3262:16;3272:5;3262:9;:16::i;:::-;3246:33;;;;;;;;;;;;3241:1;:38;3237:148;;;3295:5;3306;3295:17;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3295:17:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3362:5;:12;;;;3326:15;:33;3342:16;3352:5;3342:9;:16::i;:::-;3326:33;;;;;;;;;;;:48;;;;3237:148;3171:220;:::o;3397:141::-;3489:42;3522:8;3489:10;:28;3500:16;3510:5;3500:9;:16::i;:::-;3489:28;;;;;;;;;;;:32;;:42;;;;:::i;:::-;3397:141;;:::o;510:180:16:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;1693:458:18:-;1751:7;1996:1;1991;:6;1987:45;;;2020:1;2013:8;;;;1987:45;2042:9;2058:1;2054;:5;2042:17;;2086:1;2081;2077;:5;;;;;;:10;2069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:1;2136:8;;;1693:458;;;;;:::o;2606:326::-;2664:7;2761:1;2757;:5;2749:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:9;2819:1;2815;:5;;;;;;2803:17;;2924:1;2917:8;;;2606:326;;;;:::o;779:200:16:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;597:1712:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "/*\n * Lottery oracle\n *\n * Copyright (C) 2017-2019 Hubii AS\n */\n\npragma solidity ^0.5.11;\n\nimport {Allocator} from \"./Allocator.sol\";\nimport {RBACed} from \"./RBACed.sol\";\nimport {SafeMath} from \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport {BountyFund} from \"./BountyFund.sol\";\nimport {ERC20} from \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport {ConstantsLib} from \"./ConstantsLib.sol\";\n\n/// @title FractionalBalanceAllocator\n/// @author Jens Ivar Jørdre <jensivar@hubii.com>\n/// @notice A bounty allocator allocating by fraction of the bounty fund's token balance\ncontract FractionalBalanceAllocator is Allocator, RBACed {\n    using SafeMath for uint256;\n\n    event Frozen();\n    event FractionSet(uint256 _fraction);\n\n    uint256 public fraction;\n    bool public frozen;\n\n    constructor(uint256 _fraction)\n    public\n    {\n        // Require that fraction is less than the entirety\n        require(_fraction <= ConstantsLib.PARTS_PER(),\n            \"FractionalBalanceAllocator: fraction is greater than entirety\");\n\n        // Initialize fraction\n        fraction = _fraction;\n    }\n\n    modifier onlyNotFrozen() {\n        require(!frozen, \"FractionalBalanceAllocator: is frozen\");\n        _;\n    }\n\n    /// @notice Freeze updates this allocator\n    /// @dev This operation can not be undone\n    function freeze()\n    public\n    onlyRoleAccessor(OWNER_ROLE)\n    {\n        // Set the frozen flag\n        frozen = true;\n\n        // Emit event\n        emit Frozen();\n    }\n\n    /// @notice Set the fraction\n    /// @param _fraction The fraction to be set\n    function setFraction(uint256 _fraction)\n    public\n    onlyRoleAccessor(OWNER_ROLE)\n    onlyNotFrozen\n    {\n        // Require that fraction is less than the entirety\n        require(_fraction <= ConstantsLib.PARTS_PER(),\n            \"FractionalBalanceAllocator: fraction is greater than entirety\");\n\n        // Set the fraction\n        fraction = _fraction;\n\n        // Emit event\n        emit FractionSet(fraction);\n    }\n\n    /// @notice Return the defined allocation from the allocator\n    function allocate()\n    public\n    view\n    returns (uint256)\n    {\n        return BountyFund(msg.sender).token()\n        .balanceOf(address(msg.sender))\n        .mul(fraction)\n        .div(ConstantsLib.PARTS_PER());\n    }\n}",
  "sourcePath": "/opt/buildagent/work/9988d0feca52d9d9/contracts/FractionalBalanceAllocator.sol",
  "ast": {
    "absolutePath": "/opt/buildagent/work/9988d0feca52d9d9/contracts/FractionalBalanceAllocator.sol",
    "exportedSymbols": {
      "FractionalBalanceAllocator": [
        1128
      ]
    },
    "id": 1129,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1000,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "65:24:6"
      },
      {
        "absolutePath": "/opt/buildagent/work/9988d0feca52d9d9/contracts/Allocator.sol",
        "file": "./Allocator.sol",
        "id": 1002,
        "nodeType": "ImportDirective",
        "scope": 1129,
        "sourceUnit": 307,
        "src": "91:42:6",
        "symbolAliases": [
          {
            "foreign": 1001,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/9988d0feca52d9d9/contracts/RBACed.sol",
        "file": "./RBACed.sol",
        "id": 1004,
        "nodeType": "ImportDirective",
        "scope": 1129,
        "sourceUnit": 2267,
        "src": "134:36:6",
        "symbolAliases": [
          {
            "foreign": 1003,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1006,
        "nodeType": "ImportDirective",
        "scope": 1129,
        "sourceUnit": 3961,
        "src": "171:75:6",
        "symbolAliases": [
          {
            "foreign": 1005,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/9988d0feca52d9d9/contracts/BountyFund.sol",
        "file": "./BountyFund.sol",
        "id": 1008,
        "nodeType": "ImportDirective",
        "scope": 1129,
        "sourceUnit": 988,
        "src": "247:44:6",
        "symbolAliases": [
          {
            "foreign": 1007,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 1010,
        "nodeType": "ImportDirective",
        "scope": 1129,
        "sourceUnit": 4358,
        "src": "292:76:6",
        "symbolAliases": [
          {
            "foreign": 1009,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/9988d0feca52d9d9/contracts/ConstantsLib.sol",
        "file": "./ConstantsLib.sol",
        "id": 1012,
        "nodeType": "ImportDirective",
        "scope": 1129,
        "sourceUnit": 999,
        "src": "369:48:6",
        "symbolAliases": [
          {
            "foreign": 1011,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1013,
              "name": "Allocator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 306,
              "src": "636:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Allocator_$306",
                "typeString": "contract Allocator"
              }
            },
            "id": 1014,
            "nodeType": "InheritanceSpecifier",
            "src": "636:9:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1015,
              "name": "RBACed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2266,
              "src": "647:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RBACed_$2266",
                "typeString": "contract RBACed"
              }
            },
            "id": 1016,
            "nodeType": "InheritanceSpecifier",
            "src": "647:6:6"
          }
        ],
        "contractDependencies": [
          306,
          2266
        ],
        "contractKind": "contract",
        "documentation": "@title FractionalBalanceAllocator\n @author Jens Ivar Jørdre <jensivar@hubii.com>\n @notice A bounty allocator allocating by fraction of the bounty fund's token balance",
        "fullyImplemented": true,
        "id": 1128,
        "linearizedBaseContracts": [
          1128,
          2266,
          306
        ],
        "name": "FractionalBalanceAllocator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1019,
            "libraryName": {
              "contractScope": null,
              "id": 1017,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3960,
              "src": "666:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3960",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "660:27:6",
            "typeName": {
              "id": 1018,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "679:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1021,
            "name": "Frozen",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:2:6"
            },
            "src": "693:15:6"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1025,
            "name": "FractionSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1023,
                  "indexed": false,
                  "name": "_fraction",
                  "nodeType": "VariableDeclaration",
                  "scope": 1025,
                  "src": "731:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "730:19:6"
            },
            "src": "713:37:6"
          },
          {
            "constant": false,
            "id": 1027,
            "name": "fraction",
            "nodeType": "VariableDeclaration",
            "scope": 1128,
            "src": "756:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1026,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "756:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1029,
            "name": "frozen",
            "nodeType": "VariableDeclaration",
            "scope": 1128,
            "src": "785:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1028,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "785:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1047,
              "nodeType": "Block",
              "src": "856:261:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1035,
                          "name": "_fraction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1031,
                          "src": "933:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1036,
                              "name": "ConstantsLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 998,
                              "src": "946:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ConstantsLib_$998_$",
                                "typeString": "type(library ConstantsLib)"
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "PARTS_PER",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 997,
                            "src": "946:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "946:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "933:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4672616374696f6e616c42616c616e6365416c6c6f6361746f723a206672616374696f6e2069732067726561746572207468616e20656e746972657479",
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "984:63:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_937d05a9f9bb32a32b22103007437c7ea282c16d9ea55cfb484164cab9c72a19",
                          "typeString": "literal_string \"FractionalBalanceAllocator: fraction is greater than entirety\""
                        },
                        "value": "FractionalBalanceAllocator: fraction is greater than entirety"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_937d05a9f9bb32a32b22103007437c7ea282c16d9ea55cfb484164cab9c72a19",
                          "typeString": "literal_string \"FractionalBalanceAllocator: fraction is greater than entirety\""
                        }
                      ],
                      "id": 1034,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4502,
                        4503
                      ],
                      "referencedDeclaration": 4503,
                      "src": "925:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:123:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "925:123:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1043,
                      "name": "fraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1027,
                      "src": "1090:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1044,
                      "name": "_fraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1031,
                      "src": "1101:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1090:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1046,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:20:6"
                }
              ]
            },
            "documentation": null,
            "id": 1048,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1031,
                  "name": "_fraction",
                  "nodeType": "VariableDeclaration",
                  "scope": 1048,
                  "src": "822:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "821:19:6"
            },
            "returnParameters": {
              "id": 1033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "856:0:6"
            },
            "scope": 1128,
            "src": "810:307:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1057,
              "nodeType": "Block",
              "src": "1148:85:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1166:7:6",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 1051,
                          "name": "frozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "1167:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4672616374696f6e616c42616c616e6365416c6c6f6361746f723a2069732066726f7a656e",
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1175:39:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9868c2b1fd9b633da69f153b70cfb3f8afb462600308681f71a59c0cdd0c9e7",
                          "typeString": "literal_string \"FractionalBalanceAllocator: is frozen\""
                        },
                        "value": "FractionalBalanceAllocator: is frozen"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9868c2b1fd9b633da69f153b70cfb3f8afb462600308681f71a59c0cdd0c9e7",
                          "typeString": "literal_string \"FractionalBalanceAllocator: is frozen\""
                        }
                      ],
                      "id": 1050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4502,
                        4503
                      ],
                      "referencedDeclaration": 4503,
                      "src": "1158:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1158:57:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "1158:57:6"
                },
                {
                  "id": 1056,
                  "nodeType": "PlaceholderStatement",
                  "src": "1225:1:6"
                }
              ]
            },
            "documentation": null,
            "id": 1058,
            "name": "onlyNotFrozen",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1145:2:6"
            },
            "src": "1123:110:6",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1071,
              "nodeType": "Block",
              "src": "1397:107:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1064,
                      "name": "frozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1029,
                      "src": "1438:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1447:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1438:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "1438:13:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1068,
                      "name": "Frozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1021,
                      "src": "1489:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1489:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1070,
                  "nodeType": "EmitStatement",
                  "src": "1484:13:6"
                }
              ]
            },
            "documentation": "@notice Freeze updates this allocator\n @dev This operation can not be undone",
            "id": 1072,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1061,
                    "name": "OWNER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2056,
                    "src": "1381:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1062,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1060,
                  "name": "onlyRoleAccessor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2096,
                  "src": "1364:16:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1364:28:6"
              }
            ],
            "name": "freeze",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1346:2:6"
            },
            "returnParameters": {
              "id": 1063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:0:6"
            },
            "scope": 1128,
            "src": "1331:173:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "1697:317:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1083,
                          "name": "_fraction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "1774:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1084,
                              "name": "ConstantsLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 998,
                              "src": "1787:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ConstantsLib_$998_$",
                                "typeString": "type(library ConstantsLib)"
                              }
                            },
                            "id": 1085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "PARTS_PER",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 997,
                            "src": "1787:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1787:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1774:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4672616374696f6e616c42616c616e6365416c6c6f6361746f723a206672616374696f6e2069732067726561746572207468616e20656e746972657479",
                        "id": 1088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1825:63:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_937d05a9f9bb32a32b22103007437c7ea282c16d9ea55cfb484164cab9c72a19",
                          "typeString": "literal_string \"FractionalBalanceAllocator: fraction is greater than entirety\""
                        },
                        "value": "FractionalBalanceAllocator: fraction is greater than entirety"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_937d05a9f9bb32a32b22103007437c7ea282c16d9ea55cfb484164cab9c72a19",
                          "typeString": "literal_string \"FractionalBalanceAllocator: fraction is greater than entirety\""
                        }
                      ],
                      "id": 1082,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4502,
                        4503
                      ],
                      "referencedDeclaration": 4503,
                      "src": "1766:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:123:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1090,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:123:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1091,
                      "name": "fraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1027,
                      "src": "1928:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1092,
                      "name": "_fraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1074,
                      "src": "1939:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1928:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:20:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1096,
                        "name": "fraction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "1998:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1095,
                      "name": "FractionSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1025,
                      "src": "1986:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1986:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1098,
                  "nodeType": "EmitStatement",
                  "src": "1981:26:6"
                }
              ]
            },
            "documentation": "@notice Set the fraction\n @param _fraction The fraction to be set",
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1077,
                    "name": "OWNER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2056,
                    "src": "1663:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1078,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1076,
                  "name": "onlyRoleAccessor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2096,
                  "src": "1646:16:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1646:28:6"
              },
              {
                "arguments": null,
                "id": 1080,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1079,
                  "name": "onlyNotFrozen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1058,
                  "src": "1679:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1679:13:6"
              }
            ],
            "name": "setFraction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1074,
                  "name": "_fraction",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "1612:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1611:19:6"
            },
            "returnParameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1697:0:6"
            },
            "scope": 1128,
            "src": "1591:423:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1126,
              "nodeType": "Block",
              "src": "2151:156:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1121,
                            "name": "ConstantsLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 998,
                            "src": "2275:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ConstantsLib_$998_$",
                              "typeString": "type(library ConstantsLib)"
                            }
                          },
                          "id": 1122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "PARTS_PER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 997,
                          "src": "2275:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_pure$__$returns$_t_uint256_$",
                            "typeString": "function () pure returns (uint256)"
                          }
                        },
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2275:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1118,
                            "name": "fraction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "2252:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1113,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4499,
                                      "src": "2226:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1114,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "2226:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 1112,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2218:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 1115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2218:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1106,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4499,
                                          "src": "2179:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1107,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "2179:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 1105,
                                      "name": "BountyFund",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 987,
                                      "src": "2168:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_BountyFund_$987_$",
                                        "typeString": "type(contract BountyFund)"
                                      }
                                    },
                                    "id": 1108,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2168:22:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BountyFund_$987",
                                      "typeString": "contract BountyFund"
                                    }
                                  },
                                  "id": 1109,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 809,
                                  "src": "2168:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$4357_$",
                                    "typeString": "function () view external returns (contract ERC20)"
                                  }
                                },
                                "id": 1110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2168:30:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$4357",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 1111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4001,
                              "src": "2168:49:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 1116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2168:70:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3913,
                          "src": "2168:83:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2168:93:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3938,
                      "src": "2168:106:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:132:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1104,
                  "id": 1125,
                  "nodeType": "Return",
                  "src": "2161:139:6"
                }
              ]
            },
            "documentation": "@notice Return the defined allocation from the allocator",
            "id": 1127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allocate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2102:2:6"
            },
            "returnParameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1103,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1127,
                  "src": "2138:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2137:9:6"
            },
            "scope": 1128,
            "src": "2085:222:6",
            "stateMutability": "view",
            "superFunction": 305,
            "visibility": "public"
          }
        ],
        "scope": 1129,
        "src": "597:1712:6"
      }
    ],
    "src": "65:2244:6"
  },
  "legacyAST": {
    "absolutePath": "/opt/buildagent/work/9988d0feca52d9d9/contracts/FractionalBalanceAllocator.sol",
    "exportedSymbols": {
      "FractionalBalanceAllocator": [
        1128
      ]
    },
    "id": 1129,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1000,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "65:24:6"
      },
      {
        "absolutePath": "/opt/buildagent/work/9988d0feca52d9d9/contracts/Allocator.sol",
        "file": "./Allocator.sol",
        "id": 1002,
        "nodeType": "ImportDirective",
        "scope": 1129,
        "sourceUnit": 307,
        "src": "91:42:6",
        "symbolAliases": [
          {
            "foreign": 1001,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/9988d0feca52d9d9/contracts/RBACed.sol",
        "file": "./RBACed.sol",
        "id": 1004,
        "nodeType": "ImportDirective",
        "scope": 1129,
        "sourceUnit": 2267,
        "src": "134:36:6",
        "symbolAliases": [
          {
            "foreign": 1003,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1006,
        "nodeType": "ImportDirective",
        "scope": 1129,
        "sourceUnit": 3961,
        "src": "171:75:6",
        "symbolAliases": [
          {
            "foreign": 1005,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/9988d0feca52d9d9/contracts/BountyFund.sol",
        "file": "./BountyFund.sol",
        "id": 1008,
        "nodeType": "ImportDirective",
        "scope": 1129,
        "sourceUnit": 988,
        "src": "247:44:6",
        "symbolAliases": [
          {
            "foreign": 1007,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 1010,
        "nodeType": "ImportDirective",
        "scope": 1129,
        "sourceUnit": 4358,
        "src": "292:76:6",
        "symbolAliases": [
          {
            "foreign": 1009,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/opt/buildagent/work/9988d0feca52d9d9/contracts/ConstantsLib.sol",
        "file": "./ConstantsLib.sol",
        "id": 1012,
        "nodeType": "ImportDirective",
        "scope": 1129,
        "sourceUnit": 999,
        "src": "369:48:6",
        "symbolAliases": [
          {
            "foreign": 1011,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1013,
              "name": "Allocator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 306,
              "src": "636:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Allocator_$306",
                "typeString": "contract Allocator"
              }
            },
            "id": 1014,
            "nodeType": "InheritanceSpecifier",
            "src": "636:9:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1015,
              "name": "RBACed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2266,
              "src": "647:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RBACed_$2266",
                "typeString": "contract RBACed"
              }
            },
            "id": 1016,
            "nodeType": "InheritanceSpecifier",
            "src": "647:6:6"
          }
        ],
        "contractDependencies": [
          306,
          2266
        ],
        "contractKind": "contract",
        "documentation": "@title FractionalBalanceAllocator\n @author Jens Ivar Jørdre <jensivar@hubii.com>\n @notice A bounty allocator allocating by fraction of the bounty fund's token balance",
        "fullyImplemented": true,
        "id": 1128,
        "linearizedBaseContracts": [
          1128,
          2266,
          306
        ],
        "name": "FractionalBalanceAllocator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1019,
            "libraryName": {
              "contractScope": null,
              "id": 1017,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3960,
              "src": "666:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3960",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "660:27:6",
            "typeName": {
              "id": 1018,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "679:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1021,
            "name": "Frozen",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:2:6"
            },
            "src": "693:15:6"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1025,
            "name": "FractionSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1023,
                  "indexed": false,
                  "name": "_fraction",
                  "nodeType": "VariableDeclaration",
                  "scope": 1025,
                  "src": "731:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "730:19:6"
            },
            "src": "713:37:6"
          },
          {
            "constant": false,
            "id": 1027,
            "name": "fraction",
            "nodeType": "VariableDeclaration",
            "scope": 1128,
            "src": "756:23:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1026,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "756:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1029,
            "name": "frozen",
            "nodeType": "VariableDeclaration",
            "scope": 1128,
            "src": "785:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1028,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "785:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1047,
              "nodeType": "Block",
              "src": "856:261:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1035,
                          "name": "_fraction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1031,
                          "src": "933:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1036,
                              "name": "ConstantsLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 998,
                              "src": "946:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ConstantsLib_$998_$",
                                "typeString": "type(library ConstantsLib)"
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "PARTS_PER",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 997,
                            "src": "946:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "946:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "933:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4672616374696f6e616c42616c616e6365416c6c6f6361746f723a206672616374696f6e2069732067726561746572207468616e20656e746972657479",
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "984:63:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_937d05a9f9bb32a32b22103007437c7ea282c16d9ea55cfb484164cab9c72a19",
                          "typeString": "literal_string \"FractionalBalanceAllocator: fraction is greater than entirety\""
                        },
                        "value": "FractionalBalanceAllocator: fraction is greater than entirety"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_937d05a9f9bb32a32b22103007437c7ea282c16d9ea55cfb484164cab9c72a19",
                          "typeString": "literal_string \"FractionalBalanceAllocator: fraction is greater than entirety\""
                        }
                      ],
                      "id": 1034,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4502,
                        4503
                      ],
                      "referencedDeclaration": 4503,
                      "src": "925:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:123:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "925:123:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1043,
                      "name": "fraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1027,
                      "src": "1090:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1044,
                      "name": "_fraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1031,
                      "src": "1101:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1090:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1046,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:20:6"
                }
              ]
            },
            "documentation": null,
            "id": 1048,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1031,
                  "name": "_fraction",
                  "nodeType": "VariableDeclaration",
                  "scope": 1048,
                  "src": "822:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "821:19:6"
            },
            "returnParameters": {
              "id": 1033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "856:0:6"
            },
            "scope": 1128,
            "src": "810:307:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1057,
              "nodeType": "Block",
              "src": "1148:85:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1166:7:6",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 1051,
                          "name": "frozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "1167:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4672616374696f6e616c42616c616e6365416c6c6f6361746f723a2069732066726f7a656e",
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1175:39:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9868c2b1fd9b633da69f153b70cfb3f8afb462600308681f71a59c0cdd0c9e7",
                          "typeString": "literal_string \"FractionalBalanceAllocator: is frozen\""
                        },
                        "value": "FractionalBalanceAllocator: is frozen"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9868c2b1fd9b633da69f153b70cfb3f8afb462600308681f71a59c0cdd0c9e7",
                          "typeString": "literal_string \"FractionalBalanceAllocator: is frozen\""
                        }
                      ],
                      "id": 1050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4502,
                        4503
                      ],
                      "referencedDeclaration": 4503,
                      "src": "1158:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1158:57:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "1158:57:6"
                },
                {
                  "id": 1056,
                  "nodeType": "PlaceholderStatement",
                  "src": "1225:1:6"
                }
              ]
            },
            "documentation": null,
            "id": 1058,
            "name": "onlyNotFrozen",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1145:2:6"
            },
            "src": "1123:110:6",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1071,
              "nodeType": "Block",
              "src": "1397:107:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1064,
                      "name": "frozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1029,
                      "src": "1438:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1447:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1438:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "1438:13:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1068,
                      "name": "Frozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1021,
                      "src": "1489:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1489:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1070,
                  "nodeType": "EmitStatement",
                  "src": "1484:13:6"
                }
              ]
            },
            "documentation": "@notice Freeze updates this allocator\n @dev This operation can not be undone",
            "id": 1072,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1061,
                    "name": "OWNER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2056,
                    "src": "1381:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1062,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1060,
                  "name": "onlyRoleAccessor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2096,
                  "src": "1364:16:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1364:28:6"
              }
            ],
            "name": "freeze",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1346:2:6"
            },
            "returnParameters": {
              "id": 1063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1397:0:6"
            },
            "scope": 1128,
            "src": "1331:173:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "1697:317:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1083,
                          "name": "_fraction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1074,
                          "src": "1774:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1084,
                              "name": "ConstantsLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 998,
                              "src": "1787:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ConstantsLib_$998_$",
                                "typeString": "type(library ConstantsLib)"
                              }
                            },
                            "id": 1085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "PARTS_PER",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 997,
                            "src": "1787:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_delegatecall_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1787:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1774:37:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4672616374696f6e616c42616c616e6365416c6c6f6361746f723a206672616374696f6e2069732067726561746572207468616e20656e746972657479",
                        "id": 1088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1825:63:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_937d05a9f9bb32a32b22103007437c7ea282c16d9ea55cfb484164cab9c72a19",
                          "typeString": "literal_string \"FractionalBalanceAllocator: fraction is greater than entirety\""
                        },
                        "value": "FractionalBalanceAllocator: fraction is greater than entirety"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_937d05a9f9bb32a32b22103007437c7ea282c16d9ea55cfb484164cab9c72a19",
                          "typeString": "literal_string \"FractionalBalanceAllocator: fraction is greater than entirety\""
                        }
                      ],
                      "id": 1082,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4502,
                        4503
                      ],
                      "referencedDeclaration": 4503,
                      "src": "1766:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:123:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1090,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:123:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1091,
                      "name": "fraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1027,
                      "src": "1928:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1092,
                      "name": "_fraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1074,
                      "src": "1939:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1928:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:20:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1096,
                        "name": "fraction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "1998:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1095,
                      "name": "FractionSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1025,
                      "src": "1986:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1986:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1098,
                  "nodeType": "EmitStatement",
                  "src": "1981:26:6"
                }
              ]
            },
            "documentation": "@notice Set the fraction\n @param _fraction The fraction to be set",
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1077,
                    "name": "OWNER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2056,
                    "src": "1663:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1078,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1076,
                  "name": "onlyRoleAccessor",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2096,
                  "src": "1646:16:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_string_memory_ptr_$",
                    "typeString": "modifier (string memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1646:28:6"
              },
              {
                "arguments": null,
                "id": 1080,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1079,
                  "name": "onlyNotFrozen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1058,
                  "src": "1679:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1679:13:6"
              }
            ],
            "name": "setFraction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1074,
                  "name": "_fraction",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "1612:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1611:19:6"
            },
            "returnParameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1697:0:6"
            },
            "scope": 1128,
            "src": "1591:423:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1126,
              "nodeType": "Block",
              "src": "2151:156:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1121,
                            "name": "ConstantsLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 998,
                            "src": "2275:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ConstantsLib_$998_$",
                              "typeString": "type(library ConstantsLib)"
                            }
                          },
                          "id": 1122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "PARTS_PER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 997,
                          "src": "2275:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_pure$__$returns$_t_uint256_$",
                            "typeString": "function () pure returns (uint256)"
                          }
                        },
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2275:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1118,
                            "name": "fraction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "2252:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1113,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4499,
                                      "src": "2226:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1114,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "2226:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 1112,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2218:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 1115,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2218:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1106,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4499,
                                          "src": "2179:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1107,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "2179:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 1105,
                                      "name": "BountyFund",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 987,
                                      "src": "2168:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_BountyFund_$987_$",
                                        "typeString": "type(contract BountyFund)"
                                      }
                                    },
                                    "id": 1108,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2168:22:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BountyFund_$987",
                                      "typeString": "contract BountyFund"
                                    }
                                  },
                                  "id": 1109,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 809,
                                  "src": "2168:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$4357_$",
                                    "typeString": "function () view external returns (contract ERC20)"
                                  }
                                },
                                "id": 1110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2168:30:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$4357",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 1111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4001,
                              "src": "2168:49:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 1116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2168:70:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3913,
                          "src": "2168:83:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2168:93:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3938,
                      "src": "2168:106:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:132:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1104,
                  "id": 1125,
                  "nodeType": "Return",
                  "src": "2161:139:6"
                }
              ]
            },
            "documentation": "@notice Return the defined allocation from the allocator",
            "id": 1127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allocate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2102:2:6"
            },
            "returnParameters": {
              "id": 1104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1103,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1127,
                  "src": "2138:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2137:9:6"
            },
            "scope": 1128,
            "src": "2085:222:6",
            "stateMutability": "view",
            "superFunction": 305,
            "visibility": "public"
          }
        ],
        "scope": 1129,
        "src": "597:1712:6"
      }
    ],
    "src": "65:2244:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.11+commit.c082d0b4.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0xa8cab3d1893ed53071b052fafa843143492f25d1d6b0170d460789f7ab1954be": {
          "anonymous": false,
          "inputs": [],
          "name": "Frozen",
          "type": "event",
          "signature": "0xa8cab3d1893ed53071b052fafa843143492f25d1d6b0170d460789f7ab1954be"
        },
        "0x0715b7bb13cefca157769ecb01f046d01a1b69f814eb415ba0415e67fd119f02": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_fraction",
              "type": "uint256"
            }
          ],
          "name": "FractionSet",
          "type": "event",
          "signature": "0x0715b7bb13cefca157769ecb01f046d01a1b69f814eb415ba0415e67fd119f02"
        },
        "0x22f30a094e2ed10e9a92ebac7a70b8e2ae3288d9b594db22587861bc8fef4eef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "_role",
              "type": "string"
            }
          ],
          "name": "RoleAdded",
          "type": "event",
          "signature": "0x22f30a094e2ed10e9a92ebac7a70b8e2ae3288d9b594db22587861bc8fef4eef"
        },
        "0xafe42c64e42361a5193c84f3f11b6803e41dd901d473ee6faa72f43f8ab1f468": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "_role",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "RoleAccessorAdded",
          "type": "event",
          "signature": "0xafe42c64e42361a5193c84f3f11b6803e41dd901d473ee6faa72f43f8ab1f468"
        },
        "0x3e3ea7a1060be276a52e916803e2f89e3478e263893fc3c0b4d5793dd6d5f032": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "_role",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "RoleAccessorRemoved",
          "type": "event",
          "signature": "0x3e3ea7a1060be276a52e916803e2f89e3478e263893fc3c0b4d5793dd6d5f032"
        }
      },
      "links": {
        "ConstantsLib": "0x005615CB698d8e8AF5edE43CC5a9507285426Ccb"
      },
      "address": "0xB1275E5d6F138eAB94C7b5186202B56c0E34A368",
      "transactionHash": "0xb7a7bf20d0ca3ffc04ae513659793657729976ef47b5edc3e7fa5d01a2119191"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-04T09:26:54.542Z",
  "devdoc": {
    "author": "Jens Ivar Jørdre <jensivar@hubii.com>",
    "methods": {
      "addRole(string)": {
        "params": {
          "_role": "The concerned role"
        }
      },
      "addRoleAccessor(string,address)": {
        "params": {
          "_address": "The concerned address",
          "_role": "The concerned role"
        }
      },
      "freeze()": {
        "details": "This operation can not be undone"
      },
      "isRole(string)": {
        "params": {
          "_role": "The concerned role"
        },
        "return": "true if role has been set, else false"
      },
      "isRoleAccessor(string,address)": {
        "params": {
          "_address": "The concerned address",
          "_role": "The concerned role"
        },
        "return": "true if address is the one of a registered accessor of role, else false"
      },
      "removeRoleAccessor(string,address)": {
        "params": {
          "_address": "The concerned address",
          "_role": "The concerned role"
        }
      },
      "rolesCount()": {
        "return": "the count of roles"
      },
      "setFraction(uint256)": {
        "params": {
          "_fraction": "The fraction to be set"
        }
      }
    },
    "title": "FractionalBalanceAllocator"
  },
  "userdoc": {
    "methods": {
      "addRole(string)": {
        "notice": "Add role"
      },
      "addRoleAccessor(string,address)": {
        "notice": "Register an address as accessor of a role"
      },
      "allocate()": {
        "notice": "Return the defined allocation from the allocator"
      },
      "freeze()": {
        "notice": "Freeze updates this allocator"
      },
      "isRole(string)": {
        "notice": "Gauge whether a role is set"
      },
      "isRoleAccessor(string,address)": {
        "notice": "Gauge whether an address is an accessor of a role"
      },
      "removeRoleAccessor(string,address)": {
        "notice": "Deregister an address as accessor of a role"
      },
      "rolesCount()": {
        "notice": "Get the count of roles"
      },
      "setFraction(uint256)": {
        "notice": "Set the fraction"
      }
    },
    "notice": "A bounty allocator allocating by fraction of the bounty fund's token balance"
  }
}